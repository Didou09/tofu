.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_tutorials_tuto_plot_basic.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_tutorials_tuto_plot_basic.py:


Getting started: 5 minutes tutorial for `tofu`
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This is a tutorial that aims to get a new user a little familiar with tofu's
 structure.


.. code-block:: default


    # The following imports matplotlib, preferably using a
    # backend that allows the plots to be interactive (Qt5Agg).
    import numpy as np
    import matplotlib
    try:
        matplotlib.use('Qt5Agg')
    except ImportError:
        matplotlib.use(matplotlib.rcParams['backend'])
    import matplotlib.pyplot







We start by loading `tofu`. You might see some warnings at this stage since
optional modules for `tofu` could
be missing on the machine you are working on. This can be ignored safely.


.. code-block:: default


    import tofu as tf








We can now create our first configuration.
In `tofu` speak, a configuration is the geometry of the device and its
structures. `tofu` provides pre-defined ones for your to try, so we're going
to do just that:


.. code-block:: default


    configB2 = tf.geom.utils.create_config("B2")







The configuration can easily be visualized using the `.plot()` method:


.. code-block:: default


    configB2.plot()




.. image:: /auto_examples/tutorials/images/sphx_glr_tuto_plot_basic_001.png
    :class: sphx-glr-single-img




Since `tofu` is all about tomography, let's create a 1D camera and plot its
output.


.. code-block:: default


    cam1d = tf.geom.utils.create_CamLOS1D(
        config=configB2,
        P=[3.4, 0, 0],
        N12=100,
        F=0.1,
        D12=0.1,
        angs=[np.pi, 0, 0],
        Name="",
        Exp="",
        Diag="",
    )

    # interactive plot
    cam1d.plot_touch()




.. image:: /auto_examples/tutorials/images/sphx_glr_tuto_plot_basic_002.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /Users/mendoza/anaconda3/envs/tofu3/lib/python3.6/site-packages/tofu-.1.4.1_232_g56df4eb-py3.6-macosx-10.7-x86_64.egg/tofu/utils.py:2751: UserWarning: Not interactive backend!:
        - backend : agg   (prefer Qt5Agg)
        - canvas  : FigureCanvasAgg
      warnings.warn(msg)



The principle is similar for 2D cameras.


.. code-block:: default


    cam2d = tf.geom.utils.create_CamLOS2D(
        config=configB2,
        P=[3.4, 0, 0],
        N12=100,
        F=0.1,
        D12=0.1,
        angs=[np.pi, 0, 0],
        Name="",
        Exp="",
        Diag="",
    )
    cam2d.plot_touch()




.. image:: /auto_examples/tutorials/images/sphx_glr_tuto_plot_basic_003.png
    :class: sphx-glr-single-img




What comes next is up to you!
You could now play with the function parameters (change the cameras
direction, refinement, aperture),
with the plots (many are interactive) or create you own tomographic
configuration.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  2.335 seconds)


.. _sphx_glr_download_auto_examples_tutorials_tuto_plot_basic.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: tuto_plot_basic.py <tuto_plot_basic.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: tuto_plot_basic.ipynb <tuto_plot_basic.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
