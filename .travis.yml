language: python
python:
  # We don't actually use the Travis Python, but this keeps it organized.
  - "2.7"
  - "3.6"

git:
  depth: 100

# Best because more complete, but too slow
#sudo: enabled

before_install:
  - export REV=$(git describe)
  - export VERSION=$(echo $REV | tr - .)
  - echo $REV
  - echo $VERSION

install:
  - sudo apt-get update
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
      export RECIPE="./conda_recipe27/";
      export VADD="py27_0";
      export PCK="polygon2";
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      export RECIPE="./conda_recipe36/";
      export VADD="py36_0";
      export PCK="polygon3";
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda install conda-build
  - conda update -q conda
  - conda update -n root conda-build
  # Useful for debugging any issues with conda
  - conda info -a
  # Replace dep1 dep2 ... with your dependencies
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION numpy scipy matplotlib cython nose
  - source activate test-environment
  # Start uplaod
  - PKG_NAME=tofu
  - OS=linux-64
  #- mkdir ~/conda-bld
  - conda config --set anaconda_upload no
  #- conda update -n root conda-build
  - conda config --append channels conda-forge
  - conda config --append channels tofuproject
  - export CONDA_BLD_PATH=~/conda-bld
  # Finish uplaod
  - conda config --append channels conda-forge
  - conda config --append channels tofuproject
  # If you support official conda packages for your project, you may want to use conda build in Travis, so the building of your recipe is tested as well.
  # replace the following line:
  #- python setup.py develop
  # with:
  # Build
  - ls $HOME
  - ls $HOME/build/
  - ls $HOME/build/ToFuProject/
  - ls $HOME/build/ToFuProject/tofu/
  - ls $HOME/build/ToFuProject/tofu/build/
  - conda build $RECIPE
  - ls $HOME
  - ls $HOME/build/
  - ls $HOME/build/ToFuProject/
  - ls $HOME/build/ToFuProject/tofu/
  - ls $HOME/build/ToFuProject/tofu/build/
  - conda install -v tofu --use-local
  - ls $HOME/build/ToFuProject/tofu/
  - ls $HOME/build/ToFuProject/tofu/build/
  - ls /home/travis/miniconda/envs/test-environment/
  - ls /home/travis/miniconda/pkgs/


script:
  - ls $HOME/miniconda/pkgs/tofu*_0/lib/python2.7/site-packages/tofu/
  - ls $HOME/miniconda/pkgs/tofu*_0/lib/python2.7/site-packages/tofu/tests/
  - ls $HOME/miniconda/pkgs/tofu*_0/lib/python2.7/site-packages/tofu/tests/tests01_geom/
  - cd $Home
  - pwd
  - python -c "import os; print(os.getcwd())"
  - python -c "import tofu.pathfile as tfpf; print(tfpf.__file__)"
  - python -c "import tofu.geom._GG as tfg_GG"
  - python -c "import tofu.geom as tfg"
  - nosetests --nocapture -v --with-id --with-timer tofu.tests.tests01_geom

after_success:
  - source deactivate

deploy:
  provider: pypi
  user: "Didou09" 
  password:
    secure:"sIYghJguUkjJVurJirykyVqpXh3RILETvkFsy3eKQDbdrZ3645tz+hqdKMffRqsvM9eaSQ4QTKSv+HmNQgHx5sEOuWOocKUAH9z0Jn6sd55C6WFBq5FgS72NdTJ6GNPM0myKurJce/10A3tLRfQ0cMtJjmmitLhrayz9VWJBeKy3HSirtvWttPYrA1ce7Iewm/7x/tt4jLL27S9n/mPuTNZopHzxgfeaJ2buaaCaXfEvK/H2u+fKxmrPpRBloPVgPBr6HLRAz2udCE/bz6kvT5jttosO18KX90Eqnj335Iqk5lh8kJXTM9ieFNcPb+oETGFIZRV6sJiWPrv8lb3HnFhWLfUXDkorhNGfqxiphwm8jToKO7MoE0Nk7RMQ9G8Y6E80QsxSKriTRN/xlMGJu8649qxnp2hf3CStyU0+HTvfM5x6UKYWT2Av0EGB7dFBap9Rt0yz4V8gwrQeewVog7W4Pp33XmMIYkOTqapsK38LjHlygVKMWMM7WS3EXKXVTTCD8wl6CZ4DwDSnwWm9UyHbYBYrNSkdatmv5yAQrrH/gUEy3AFfBFcP838zAyXOqTl7w/orRM3cKj2ot+btcI3knEP6njsOcczMOoLS/C+4Z2O1w5SqXNQZjGusvusRed+J3ul7mrBrXi2G66KvUieicZwLyqsjwpokwfrcD4c=" 
  skip_cleanup: true
  on:
    tags: true
    #branch: master

after_deploy:
  - if [[ "$((echo $TRAVIS_BRANCH) | head -c 1)" == "v" ]]; then
      conda install anaconda-client;
      bash $RECIPE/conda_upload.sh;
    else
      echo "Not uploaded to conda because not tagged release branch !";
    fi




